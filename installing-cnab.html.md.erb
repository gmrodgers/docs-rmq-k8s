---
title: Installing and Configuring Using CNAB
owner: RMQ for k8s
---

<strong><%= modified_date %></strong>

This topic describes how to install and configure Pivotal RabbitMQ for Kubernetes
using Cloud Native Application Bundle (CNAB).

There are two methods to install RabbitMQ for Kubernetes, use one of the following:

* **Kubernetes Manifests:** If you are installing for the first time, use this.
For instructions, see [Installing and Configuring Using Kubernetes Manifests](./installing.html).
* **CNAB:** If you have previously installed Pivotal RabbitMQ for Kubernetes, use the procedure in this topic.

## <a id='prerequisites'></a> Prerequisites

Before you install and configure RabbitMQ for Kubernetes, you must install and configure:

1. **[kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/)**
1. **[Docker](https://docs.docker.com/install/)**
1. **[Duffle](https://github.com/deislabs/duffle)**
1. **A Kubernetes cluster** <%# Do we want to mention Enterprise PKS here? %>
1. **A private registry:** Pivotal recommends that you keep the operator and
service-broker images private if your repository is publicly accessible.

<%# do we need the statement below? here and the other install page %>

This topic is written under the assumption that you use a private registry.
If you do not have access to a private registry, email the team at
rabbitmq-for-k8s@pivotal.io for help.

## <a id='overview'></a> Overview

To install and configure Pivotal RabbitMQ for Kubernetes:

1. [Download and Import Pivotal RabbitMQ for Kubernetes](#import)
2. [Configure Kubernetes Cluster Access to your Private Registry](#generate-credentials)
3. [Move the Images](#relocate-images)
4. [Install the CNAB Bundle](#install)
5. [Verify the Installation](#verify)

## <a id='import'></a>Download and Import Pivotal RabbitMQ for Kubernetes

To download and import Pivotal RabbitMQ for Kubernetes:

1. Download the Pivotal RabbitMQ for Kubernetes CNAB artifact from [Pivotal Network](https://network.pivotal.io/products/p-rabbitmq-for-kubernetes/).

1. Extract the tarball you downloaded to gain access to `bundle.json` by running:

    ```
    duffle import rabbitmq-for-kubernetes-VERSION.tgz
    ```
    Where `VERSION` is the version of RabbitMQ for Kubernetes that you downloaded.
    <br><br>
    For example:

    <pre class="terminal">
      $ duffle import rabbitmq-for-kubernetes-0.1.4.tgz
    </pre>

## <a id='generate-credentials'></a>Configure Kubernetes Cluster Access to your Private Registry

To generate credentials to grant the Kubernetes cluster access to images in your private registry:

1. Run the following command:

    ```
    duffle credentials generate rabbitmq-creds \
     -f rabbitmq-for-kubernetes-VERSION/bundle.json
    ```

    Where `VERSION` is the version of RabbitMQ for Kubernetes that you downloaded.
    <p class="note"><strong>Note:</strong>
     For more options on how to generate duffle credentials, run <code>duffle credentials --help</code>.
    </p>

1. When prompted, enter the following:
    * The absolute path to the kubeconfig that points to your target Kubernetes cluster
    * The URL for the docker server
    * The docker username and password

<%# When do you need to check the token is valid????? maybe move this to Install as a first step? or make a step here. %>

<p class="note"><strong>Note:</strong>
  Ensure the authentication token is still valid if your kubeconfig context uses
  an authentication provider such as Google Kubernetes Engine (GKE).
  You can check this by running any <code>kubectl</code> command before you run <code>duffle install</code>
  in <a href="install">Install the Bundle</a> below.
</p>

## <a id='relocate-images'></a>Move the Images

To move the images to your private registry:

1. Run the following command:

    ```
    duffle relocate rabbitmq-for-kubernetes-VERSION.tgz -f \
      --repository-prefix=REGISTRY-HOST/ACCOUNT-NAME \
      --relocation-mapping=relmap.json
    ```
    <%# needs example including output %>
    Where:
    * `REGISTRY-HOST` is the hostname for your private registry
    * `ACCOUNT-NAME` is the account name of your private registry

    <p class="note"><strong>Note:</strong>
      <code>--relocation-mapping</code> specifies the name of the file that is
      created to store relocation mappings.
    </p>

## <a id='install'></a>Install the CNAB Bundle

To install the CNAB bundle:

1. Run the following command:

    ```
    duffle install rabbitmq rabbitmq-for-kubernetes-VERSION.tgz -f \
      --relocation-mapping=relmap.json \
      --credentials rabbitmq-creds \
      --set broker_username=BROKER-USERNAME \
      --set broker_password=BROKER-PASSWORD \
    ```
    <%# needs example including output %>
    Where:
    * `BROKER-USERNAME` is a username you specify for your broker
    * `BROKER-PASSWORD` is a password you specify for your broker

    The <code>set</code> flag refers to CNAB parameters that configure your CNAB installation.
    The table below lists the RabbitMQ for Kubernetes CNAB parameters that are
    available to use with the `--set` flag.

    <%# ask for file type %>
    <p class="note"><strong>Note:</strong>
      You can also pass CNAB parameters using a file with the <code>--set-file FILENAME</code> flag.
    </p>

    <table>
      <tr>
        <th width="35%">Parameter</th>
        <th width="65%">Description</th>
      </tr>
      <tr>
        <td><code>broker_username</code></td>
        <td>Username for the service broker</td>
      </tr>
      <tr>
        <td><code>broker_password</code></td>
        <td>Password for the service broker</td>
      </tr>
      <tr>
        <td>(Optional) <code>rabbitmq_service_type</code></td>
        <td>
          Kubernetes service type for the RabbitmqCluster service.
          Available values are:
          <ul>
            <li><code>ClusterIP</code></li>
            <li><code>NodePort</code></li>
            <li><code>LoadBalance</code></li>
          </ul>
        </td>
      </tr>
      <tr>
        <td>(Optional) <code>broker_service_type</code></td>
        <td>
          Kubernetes Service type for the service broker.
          Available values are:
          <ul>
            <li><code>ClusterIP</code></li>
            <li><code>NodePort</code></li>
            <li><code>LoadBalance</code></li>
          </ul>
        </td>
      </tr>
      <tr>
        <td>(Optional) <code>service_annotations</code></td>
        <td>
          Kubernetes annotations for service metadata such as for IaaS configuration.
          If the configuration you want requires multiple key-value pairs,
          add them as a <code>\n</code> separated string. <br>For example:
          <code>--set service_annotations="service.k8s.io/cert: arn:aws:acm:us-east-1\nservice.k8s.io/ports: 443,889"</code>
        </td>
      </tr>
      <tr>
        <td>(Optional) <code>storage_class_name</code></td>
        <td>Name of the Kubernetes StorageClass to use for provisioning RabbitmqCluster PersistentVolumes</td>
      </tr>
      <tr>
        <td>(Optional) <code>storage_capacity</code></td>
        <td>Capacity set in the RabbitmqCluster PersistentVolumeClaims</td>
      </tr>
      <tr>
        <td>(Optional) <code>image_pull_secret</code></td>
        <td>Name of the Kuberenetes ImagePullSecret for the RabbitmqCluster to use when pulling the RabbitMQ Docker image</td>
      </tr>
    </table>

## <a id='verify'></a>Verify the Installation

To verify the installation:

1. Verify the operator and broker have been installed successfully and get the
address for the broker from the service object by running:

    ```
    kubectl -n pivotal-rabbitmq-system get services
    ```
    <%# needs example including output %>
1. View the catalog to confirm the service and plan IDs:

    ```
    curl -H "X-Broker-API-Version: 2.14" \
      -H "Content-Type: application/json" \
      BROKER-USERNAME:BROKER-PASSWORD@IP-ADDRESS:8080/v2/catalog
    ```
    <%# needs example including output %>
    Where:
    * `BROKER-USERNAME` is the `broker_username` you specified in the `duffle install` command above
    * `BROKER-PASSWORD` is the `broker_password` you specified in the `duffle install` command above
    * `IP-ADDRESS` is found in the output of `kubectl get services` command

1. Provision a service instance by running:

    ```
    curl -X PUT -H "X-Broker-API-Version: 2.14" \
      -H "Content-Type: application/json" \
      BROKER-USERNAME:BROKER-PASSWORD@IP-ADDRESS:8080/v2/service_instances/INSTANCE-NAME?accepts_incomplete=true -d '{
      "service_id": "00000000-0000-0000-0000-000000000000",
      "plan_id": "22222222-2222-2222-2222-222222222222"
    }'
    ```
    <%# needs example including output %>
    Where is `INSTANCE-NAME` is a name you define for your instance.

1. Verify the RabbitMQ cluster has been created by running:

    ```
    kubectl -n p-rabbitmq-INSTANCE-NAME get all
    ```
    <%# needs example including output %>
    Where is `INSTANCE-NAME` is a name you defined above.

<%# this is probably more a Troubleshooting thing

## <a id='status'></a>Get the Status of the Installed CNAB Bundle

To get the status of the CNAB bundle, run:

```
duffle status rabbitmq --credentials rabbitmq-creds
```
%>

<%# the uninstall section should be on the upgrade page as an upgrade step -- you have to uninstall this before you install the next version

## <a id='uninstall'></a>Uninstall Bundle

```
duffle uninstall rabbitmq --credentials rabbitmq-creds
```

%>
