---
title: Pivotal RabbitMQ for Kubernetes (Beta)
owner: RMQ for k8s
---

<strong><%= modified_date %></strong>

<%= partial vars.path_to_partials + "/services/beta-notice" %>

<%= vars.product_name %> is a Kubernetes operator that automates provisioning, management, and operations of RabbitMQ clusters
running on Kubernetes.

## <a id='overview'></a> Overview

<%= vars.product_name %> provides a consistent and easy way to deploy RabbitMQ clusters to Kubernetes and
manage their lifecycle. RabbitMQ clusters can be accessed by apps running on Kubernetes,
<%= vars.app_runtime %>, or elsewhere.

<%= vars.product_name %> has two main components:

* A Kubernetes operator that automates the provision, management, and operations of RabbitMQ clusters
* (Optional) An OSBAPI-compliant service broker for integration with <%= vars.platform_name %>

When combined with <%= vars.app_runtime %>, this product enables you to create and bind RabbitMQ clusters with single commands.
Run `cf create-service` to create RabbitMQ clusters and run `cf bind-service` to bind them to a <%= vars.app_runtime %>-deployed application.

## <a id='features'></a> Key Features

<%= vars.product_name %> includes the following key features:

* Provisioning of single-node and 3-node RabbitMQ clusters
* Automatic reconciliation of deployed clusters whenever their actual state does not match the expected state
* Integration with <%= vars.platform_name %> through an OSBAPI-compliant service broker
* Monitoring of RabbitMQ clusters through Prometheus and Grafana.
For more information, see the [Prometheus](https://prometheus.io/docs/introduction/overview/)
and [Grafana](https://grafana.com/docs/) documentation.

Automated upgrading of RabbitMQ clusters, another key feature, is planned for a later update.

## <a id="snapshot"></a> Product Snapshot

The following table provides version and version-support information about <%= vars.product_name %>.

<table class="nice">
    <th>Element</th>
    <th>Details</th>
    <tr>
        <td>Version</td>
        <td>X.X.X</td>
    </tr>
    <tr>
        <td>Release date</td>
        <td>MMMM DD, 2019</td>
    </tr>
    <tr>
        <td>Software component version</td>
        <td>RabbitMQ OSS 3.8.0</td>
    </tr>
</table>

## <a id="limitations"></a> Limitations

### <a id="gen-limits"></a> General Limitations

* This product is currently in beta. Pivotal does not currently provide commercial support.
* This product is intended to be used with any Kubernetes distribution.
  However, given the number of Kubernetes vendors, versions and configurations, not all of them have been
  tested with <%= vars.product_name %>.
* Product upgrades are currently not supported. If you want to test a newer version, delete the previous version first.

### <a id='update-rmq-cluster'></a> RabbitMQ Cluster Updates

Currently, after you create a RabbitMQ Cluster, you cannot update the cluster or any of its child objects.
Child objects include `StatefulSet`, `ConfigMap`, `Service`, and `Secret`. If you try to update any of the configurations, there is no effect.
`StatefulSet`, `ConfigMap` and `Service` objects are re-created if you delete them.
However, `Secret` objects are not re-created automatically.
If you delete `Secret` objects, you must manually re-create the secret or delete and re-create the cluster.

### <a id='rmq-image'></a> RabbitMQ Image

Currently Pivotal does not support pulling the RabbitMQ image from a repository that requires authentication.

### <a id='prov-status'></a> Provision Status of Service Instance

Due to the eventually-consistent design of Kubernetes, the service broker cannot detect the following about a deployment:

+ If it is taking a long time but will eventually succeed.
+ If it failed temporarily but could succeed on another attempt.
+ If it failed permanently and needs human intervention to succeed. For example, this could happen if the deployment refers to a non-existent `storageClass`.

Because of this, the service broker never returns a `deployment failed` status and instead returns `create in progress`.

## <a id="feedback"></a> Feedback

If you have a feature request, questions, or information about an issue, please email
[RabbitMQ for Kubernetes Feedback](mailto:rabbitmq-for-k8s@pivotal.io).
