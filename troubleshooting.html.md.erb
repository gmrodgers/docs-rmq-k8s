---
title: Troubleshooting Pivotal RabbitMQ for Kubernetes
owner: RMQ for k8s
---

<strong><%= modified_date %></strong>

This topic describes how to troubleshoot common problems with <%= vars.product_full %>.

##<a id='failed-instance'></a> RabbitMQ Cluster Fails to Deploy

After creating a RabbitMQ instance, it is not available within a few minutes.

###<a id='failed-instance-symptom'></a>Symptom

When not using a service broker: RabbitMQ pods are not running.

When using a service broker: service instance provision status is `create in progress` for more than a few minutes.

###<a id='failed-instance-explanation'></a>Explanation

Common reasons for such failure are:
* Incorrect `imagePullSecret` configuration - image cannot be pulled from a Docker registry
* Incorrect `storageClassName` configuration - no default storage class has been configured in the Kubernetes cluster and `p-rmq-operator-config` does not contain a valid `storageClassName` value

###<a id='failed-instance-solution'></a>Solution

[Check the status of the RabbitMQ cluster resources](#check-instance-status) in your Kubernetes cluster for more details about the failure.

## <a id='ts-install'></a> Troubleshoot the Installation

Follow the steps in the sections below to check that CNAB was installed successfully and that you can provision
an instance without registering the service broker with <%= vars.app_runtime %>.

### <a id='verify-operator-and-broker'></a> Verify Kubernetes Operator and Service Broker Installation

Verify that the Kubernetes Operator and service broker have been installed successfully and get the
address for the service broker from the service object by running:

  ```
  kubectl -n pivotal-rabbitmq-system get all
  ```

For example:

<pre class="terminal">
$ kubectl -n pivotal-rabbitmq-system get all
NAME                                      READY   STATUS    RESTARTS   AGE
pod/p-rmq-operator-bdb96497b-5wq9q        1/1     Running   0          27m
pod/p-rmq-servicebroker-56f68f4df-g9rlb   1/1     Running   0          26m

NAME                                  TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)    AGE
service/p-rmq-servicebroker-ingress   ClusterIP   10.110.249.16   <none>        8080/TCP   26m

NAME                                  READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/p-rmq-operator        1/1     1            1           27m
deployment.apps/p-rmq-servicebroker   1/1     1            1           26m

NAME                                            DESIRED   CURRENT   READY   AGE
replicaset.apps/p-rmq-operator-bdb96497b        1         1         1       27m
replicaset.apps/p-rmq-servicebroker-56f68f4df   1         1         1       26m
</pre>

### <a id='check-connect'></a> Check Connectivity to the Service Broker

1. View the catalog to see the service and plan IDs by running:

    ```
    curl -H "X-Broker-API-Version: 2.14" \
      -H "Content-Type: application/json" \
      BROKER-USERNAME:BROKER-PASSWORD@IP-ADDRESS:8080/v2/catalog
    ```

    Where:
    * `BROKER-USERNAME` is the broker username you set during installation.
    * `BROKER-PASSWORD` is the broker password you set during installation.
    * `IP-ADDRESS` is found in the output of the `kubectl get services` command.

    For example:

<pre class="terminal">
$ curl -H "X-Broker-API-Version: 2.14"   -H "Content-Type: application/json"   BROKER-USERNAME:BROKER-PASSWORD@p-rmq-servicebroker-ingress:8080/v2/catalog
{"services":[{"id":"00000000-0000-0000-0000-000000000000","name":"p-rabbitmq-k8s","description":"RabbitMQ on K8s","bindable":true,"tags":["rabbitmq","amqp"],"plan_updateable":false,"plans":[{"id":"22222222-2222-2222-2222-222222222222","name":"single","description":"Single-node RabbitMQ on K8s"},{"id":"33333333-3333-3333-3333-333333333333","name":"ha","description":"3-node RabbitMQ on K8s"}]}]}
</pre>

### <a id='prov-instance'></a> Provision an Instance Using the Service Broker

You can validate that the service broker works by manually triggering a service instance provision.

Provision a service instance by running:

  ```
  curl -X PUT -H "X-Broker-API-Version: 2.14" \
    -H "Content-Type: application/json" \
    BROKER-USERNAME:BROKER-PASSWORD@IP-ADDRESS:8080/v2/service_instances/INSTANCE-NAME?accepts_incomplete=true -d '{
    "service_id": "00000000-0000-0000-0000-000000000000",
    "plan_id": "22222222-2222-2222-2222-222222222222"
  }'
  ```

  Where `INSTANCE-NAME` is a name you define for your instance.

  For example:

<pre class="terminal">
$ curl -X PUT -H "X-Broker-API-Version: 2.14" \
  -H "Content-Type: application/json" \
  user1:password123@10.25.18.2:8080/v2/service_instances/instance-1?accepts_incomplete=true -d '{
  "service_id": "00000000-0000-0000-0000-000000000000",
  "plan_id": "22222222-2222-2222-2222-222222222222"
}'
{}
</pre>

### <a id='find-namespace'></a> Find the Namespace If Using the Service Broker

When the service broker provisions an instance it creates a namespace. The pattern for that namespace is `p-rmq-GUID`.

To retrieve the instance ID run `cf service INSTANCE-NAME --guid `.

For example:
  <pre class="terminal">
    $ cf service rmq1 --guid 
      9ec22161-c935-4fab-a3fa-66f5446dc434
  </pre>

### <a id='check-instance-status'></a> Check the Status of an Instance

1. To check the status of an instance, run `kubectl -n NAMESPACE get all`.<br><br>

    Where `NAMESPACE` is the Kubernetes namespace of the instance.<br><br>

    If you do not know the namespace, follow the steps in [Find the Namespace If Using the Service Broker](#find-namespace) above.<br><br>

    For example:

    <pre class="terminal">
      $ kubectl -n p-rmq-instance-1 get all
      NAME                            READY   STATUS    RESTARTS   AGE
      pod/pivotal-rabbitmq-server-0   1/1     Running   0          2m27s

      NAME                                TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)                        AGE
      service/pivotal-rabbitmq-headless   ClusterIP   None             <none>        4369/TCP                       2m27s
      service/pivotal-rabbitmq-ingress    ClusterIP   10.111.202.183   <none>        5672/TCP,15672/TCP,15692/TCP   2m28s

      NAME                                       READY   AGE
      statefulset.apps/pivotal-rabbitmq-server   1/1     2m28s
    </pre>

1. Check for any status other than `Running`.
